[MASTER]
# Specify a configuration file.
rcfile=.pylintrc

# Pickle collected data for later comparisons.
persistent=no

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=saltpylint.pep8,
  saltpylint.pep263,
  saltpylint.strings,
  saltpylint.fileperms,
  saltpylint.py3modernize,
  saltpylint.smartup

# Use multiple processes to speed up Pylint.
# Don't bump this values on PyLint 1.4.0 - Know bug that ignores the passed --rcfile
jobs=1

# Allow loading of arbitrary C extensions. Extensions are imported into the
# active Python interpreter and may run arbitrary code.
unsafe-load-any-extension=no

# A comma-separated list of package or module names from where C extensions may
# be loaded. Extensions are loading into the active Python interpreter and may
# run arbitrary code
extension-pkg-whitelist=

# Fileperms Lint Plugin Settings
fileperms-default=0644
fileperms-ignore-paths=tests/runtests.py,tests/jenkins*.py,tests/saltsh.py,tests/buildpackage.py


[MESSAGES CONTROL]
# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once).You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use"--disable=all --enable=classes
# --disable=W"
disable=R,
  I0011,
  I0012,
  I0013,
  E1101,
  E1103,
  C0102,
  C0103,
  C0111,
  C0203,
  C0204,
  C0301,
  C0302,
  C0330,
  W0110,
  W0122,
  W0142,
  W0201,
  W0212,
  W0404,
  W0511,
  W0603,
  W0612,
  W0613,
  W0621,
  W0622,
  W0631,
  W0704,
  W1202,
  F0220,
  F0401,
  E8501,
  E8121,
  E8122,
  E8123,
  E8124,
  E8125,
  E8126,
  E8127,
  E8128,
  E8129,
  E8131,
  E8265

# Disabled:
# R* [refactoring suggestions & reports]
# I0011 (locally-disabling)
# I0012 (locally-enabling)
# I0013 (file-ignored)
# E1101 (no-member) [pylint isn't smart enough]
# E1103 (maybe-no-member)
# C0102 (blacklisted-name) [because it activates C0103 too]
# C0103 (invalid-name)
# C0111 (missing-docstring)
# C0203 (bad-mcs-method-argument)
# C0204 (bad-mcs-classmethod-argument)
# C0301 (line-too-long)
# C0302 (too-many-lines)
# C0330 (bad-continuation)
# W0110 (deprecated-lambda)
# W0122 (exec-statement)
# W0142 (star-args)
# W0201 (attribute-defined-outside-init) [done in several places in the codebase]
# W0212 (protected-access)
# W0404 (reimported) [done intentionally for legit reasons]
# W0511 (fixme) [several outstanding instances currently in the codebase]
# W0603 (global-statement)
# W0612 (unused-variable) [unused return values]
# W0613 (unused-argument)
# W0621 (redefined-outer-name)
# W0622 (redefined-builtin) [many parameter names shadow builtins]
# W0631 (undefined-loop-variable) [~3 instances, seem to be okay]
# W0704 (pointless-except) [misnomer; "ignores the exception" rather than "pointless"]
# F0220 (unresolved-interface)
# F0401 (import-error)
#
# E812* All PEP8 E12*
# E8265 PEP8 E265 - block comment should start with "# "
# E8501 PEP8 line too long


[REPORTS]
# Tells whether to display a full report or only the messages
reports=no

# Add a comment according to your evaluation note. This is used by the global
# evaluation report (RP0004).
comment=no

# Template used to display messages. This is a python new-style format string
# used to format the message information. See doc for all details
#msg-template=
msg-template='{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}'


[EXCEPTIONS]

# Exceptions that will emit a warning when being caught. Defaults to
# "Exception"
overgeneral-exceptions=BaseException
